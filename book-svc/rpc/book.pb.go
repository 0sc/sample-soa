// Code generated by protoc-gen-go.
// source: book.proto
// DO NOT EDIT!

/*
Package rpc is a generated protocol buffer package.

It is generated from these files:
	book.proto

It has these top-level messages:
	Empty
	Book
	Books
*/
package rpc

import proto "github.com/golang/protobuf/proto"
import fmt "fmt"
import math "math"

import (
	context "golang.org/x/net/context"
	grpc "google.golang.org/grpc"
)

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

// This is a compile-time assertion to ensure that this generated file
// is compatible with the proto package it is being compiled against.
// A compilation error at this line likely means your copy of the
// proto package needs to be updated.
const _ = proto.ProtoPackageIsVersion2 // please upgrade the proto package

type Empty struct {
}

func (m *Empty) Reset()                    { *m = Empty{} }
func (m *Empty) String() string            { return proto.CompactTextString(m) }
func (*Empty) ProtoMessage()               {}
func (*Empty) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{0} }

type Book struct {
	Title       string `protobuf:"bytes,1,opt,name=title" json:"title,omitempty"`
	Author      string `protobuf:"bytes,2,opt,name=author" json:"author,omitempty"`
	Isbn        string `protobuf:"bytes,3,opt,name=isbn" json:"isbn,omitempty"`
	Description string `protobuf:"bytes,4,opt,name=description" json:"description,omitempty"`
}

func (m *Book) Reset()                    { *m = Book{} }
func (m *Book) String() string            { return proto.CompactTextString(m) }
func (*Book) ProtoMessage()               {}
func (*Book) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{1} }

func (m *Book) GetTitle() string {
	if m != nil {
		return m.Title
	}
	return ""
}

func (m *Book) GetAuthor() string {
	if m != nil {
		return m.Author
	}
	return ""
}

func (m *Book) GetIsbn() string {
	if m != nil {
		return m.Isbn
	}
	return ""
}

func (m *Book) GetDescription() string {
	if m != nil {
		return m.Description
	}
	return ""
}

type Books struct {
	Books []*Book `protobuf:"bytes,1,rep,name=books" json:"books,omitempty"`
}

func (m *Books) Reset()                    { *m = Books{} }
func (m *Books) String() string            { return proto.CompactTextString(m) }
func (*Books) ProtoMessage()               {}
func (*Books) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{2} }

func (m *Books) GetBooks() []*Book {
	if m != nil {
		return m.Books
	}
	return nil
}

func init() {
	proto.RegisterType((*Empty)(nil), "rpc.Empty")
	proto.RegisterType((*Book)(nil), "rpc.Book")
	proto.RegisterType((*Books)(nil), "rpc.Books")
}

// Reference imports to suppress errors if they are not otherwise used.
var _ context.Context
var _ grpc.ClientConn

// This is a compile-time assertion to ensure that this generated file
// is compatible with the grpc package it is being compiled against.
const _ = grpc.SupportPackageIsVersion4

// Client API for BookSvc service

type BookSvcClient interface {
	GetBooks(ctx context.Context, in *Empty, opts ...grpc.CallOption) (*Books, error)
}

type bookSvcClient struct {
	cc *grpc.ClientConn
}

func NewBookSvcClient(cc *grpc.ClientConn) BookSvcClient {
	return &bookSvcClient{cc}
}

func (c *bookSvcClient) GetBooks(ctx context.Context, in *Empty, opts ...grpc.CallOption) (*Books, error) {
	out := new(Books)
	err := grpc.Invoke(ctx, "/rpc.bookSvc/GetBooks", in, out, c.cc, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

// Server API for BookSvc service

type BookSvcServer interface {
	GetBooks(context.Context, *Empty) (*Books, error)
}

func RegisterBookSvcServer(s *grpc.Server, srv BookSvcServer) {
	s.RegisterService(&_BookSvc_serviceDesc, srv)
}

func _BookSvc_GetBooks_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(Empty)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(BookSvcServer).GetBooks(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/rpc.bookSvc/GetBooks",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(BookSvcServer).GetBooks(ctx, req.(*Empty))
	}
	return interceptor(ctx, in, info, handler)
}

var _BookSvc_serviceDesc = grpc.ServiceDesc{
	ServiceName: "rpc.bookSvc",
	HandlerType: (*BookSvcServer)(nil),
	Methods: []grpc.MethodDesc{
		{
			MethodName: "GetBooks",
			Handler:    _BookSvc_GetBooks_Handler,
		},
	},
	Streams:  []grpc.StreamDesc{},
	Metadata: "book.proto",
}

func init() { proto.RegisterFile("book.proto", fileDescriptor0) }

var fileDescriptor0 = []byte{
	// 189 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x00, 0x00, 0x00, 0x02, 0xff, 0x4c, 0x8f, 0xc1, 0xca, 0xc2, 0x30,
	0x10, 0x84, 0xff, 0xfe, 0x6d, 0x5a, 0xbb, 0xbd, 0x2d, 0x22, 0xc1, 0x8b, 0x25, 0x78, 0xe8, 0xa9,
	0x42, 0x7d, 0x03, 0x41, 0xbc, 0xd7, 0x27, 0xb0, 0xb1, 0x60, 0xac, 0x76, 0x43, 0x12, 0x05, 0xdf,
	0x5e, 0x92, 0x8a, 0x78, 0x9b, 0xf9, 0x26, 0x43, 0x66, 0x01, 0x3a, 0xa2, 0xa1, 0xd6, 0x86, 0x1c,
	0x61, 0x6c, 0xb4, 0x14, 0x19, 0xb0, 0xfd, 0x5d, 0xbb, 0x97, 0xb8, 0x42, 0xb2, 0x23, 0x1a, 0x70,
	0x0e, 0xcc, 0x29, 0x77, 0xeb, 0x79, 0x54, 0x46, 0x55, 0xde, 0x4e, 0x06, 0x17, 0x90, 0x9e, 0x1e,
	0xee, 0x42, 0x86, 0xff, 0x07, 0xfc, 0x71, 0x88, 0x90, 0x28, 0xdb, 0x8d, 0x3c, 0x0e, 0x34, 0x68,
	0x2c, 0xa1, 0x38, 0xf7, 0x56, 0x1a, 0xa5, 0x9d, 0xa2, 0x91, 0x27, 0x21, 0xfa, 0x45, 0xa2, 0x02,
	0xe6, 0xff, 0xb2, 0xb8, 0x02, 0xe6, 0x07, 0x59, 0x1e, 0x95, 0x71, 0x55, 0x34, 0x79, 0x6d, 0xb4,
	0xac, 0x7d, 0xd4, 0x4e, 0xbc, 0xd9, 0x40, 0xe6, 0xc5, 0xf1, 0x29, 0x71, 0x0d, 0xb3, 0x43, 0xef,
	0xa6, 0x1e, 0x84, 0x87, 0x61, 0xf8, 0x12, 0xbe, 0x25, 0x2b, 0xfe, 0xba, 0x34, 0xdc, 0xb6, 0x7d,
	0x07, 0x00, 0x00, 0xff, 0xff, 0x37, 0xc7, 0x47, 0x96, 0xe9, 0x00, 0x00, 0x00,
}
